[{"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste\\front\\foodsavers\\src\\index.js":"1","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste\\front\\foodsavers\\src\\App.js":"2","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste\\front\\foodsavers\\src\\reportWebVitals.js":"3","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\index.js":"4","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\App.js":"5","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\reportWebVitals.js":"6","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Register.js":"7","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Login.js":"8","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Main.js":"9","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\Calls.js":"10","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\ApiRoutes.js":"11","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\RegisterFood.js":"12","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Modal.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":796,"mtime":1608631803690,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1071,"mtime":1611354092254,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":8168,"mtime":1611405378884,"results":"22","hashOfConfig":"19"},{"size":2085,"mtime":1611407671879,"results":"23","hashOfConfig":"19"},{"size":29395,"mtime":1611359214649,"results":"24","hashOfConfig":"19"},{"size":2442,"mtime":1610658488698,"results":"25","hashOfConfig":"19"},{"size":310,"mtime":1610561331597,"results":"26","hashOfConfig":"19"},{"size":7140,"mtime":1611398610071,"results":"27","hashOfConfig":"19"},{"size":484,"mtime":1610582640859,"results":"28","hashOfConfig":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1il4pow",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"upwbte",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste\\front\\foodsavers\\src\\index.js",[],["59","60"],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste\\front\\foodsavers\\src\\App.js",[],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste\\front\\foodsavers\\src\\reportWebVitals.js",[],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\index.js",[],["61","62"],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\App.js",["63"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport RegisterFood from './components/RegisterFood'\nexport default class App extends Component {\n  componentDidMount =()=>{\n    \n  }\n  \n  RegisterClick=()=>{\n    <Switch>\n          <Route exact path=\"/register\" component={Register}/>\n    </Switch>\n\n  }\n  render() {\n    return (\n      <div className=\"Appa\">\n      <div className=\"formWrapper\">\n        <header className=\"all\">\n      <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n        <Route path=\"/main\" exact component={Main} />\n        <Route path=\"/registerfood\" exact component={RegisterFood} />\n        <Route path=\"/\" render ={() => <div>404</div>} />\n      </Switch>\n    </BrowserRouter>\n    </header>\n    </div>\n    </div>\n    )\n  }\n}\n\n\n\n","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\reportWebVitals.js",[],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Register.js",[],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Login.js",["64"],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Main.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { Component } from \"react\";\r\nimport {\r\n  get,\r\n  post,\r\n  getAll,\r\n  getAllFood,\r\n  getFriendsIds,\r\n  deleteFriendship,\r\n  getUserGroups,\r\n  update,\r\n  deleteSmth,\r\n} from \"../Calls\";\r\nimport {\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n} from \"react-share\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  foodRoute,\r\n  userRoute,\r\n  friendsRoute,\r\n  link,\r\n  groupRoute,\r\n  groupUsersRoute,\r\n} from \"../ApiRoutes\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUserPlus,\r\n  faUsers,\r\n  faTrash,\r\n  faPlusCircle,\r\n  faUtensils,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"./Modal.js\";\r\nexport default class Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      friends: [],\r\n      foods: [],\r\n      groups: [],\r\n      user: null,\r\n      fridgeHeight: 800,\r\n      day: null,\r\n      year: null,\r\n      month: null,\r\n      dd: null,\r\n      mm: null,\r\n      yyyy: 0,\r\n      obj: [],\r\n      newFriend: {\r\n        UserId: 0,\r\n        UserFriendId: 0,\r\n      },\r\n      idAdd: null,\r\n      show: false,\r\n      show2: false,\r\n      idGet: null,\r\n      sidebarOpen: \"inline\",\r\n      GroupDescription: null,\r\n      friendFoods: [],\r\n      dummy: null,\r\n      foodTypes: [\r\n        \"Branzeturi\",\r\n        \"Lactate\",\r\n        \"Alcool\",\r\n        \"Lichide\",\r\n        \"Carne de Porc\",\r\n        \"Carne de Vita\",\r\n        \"Carne de Pui\",\r\n        \"Carne de Miel\",\r\n        \"Fructe\",\r\n        \"Legume\",\r\n        \"Peste\",\r\n        \"Mancare gatita\",\r\n        \"Desert\",\r\n      ],\r\n    };\r\n    this.delete = this.delete.bind(this);\r\n    this.deleteFriendshipMain = this.deleteFriendshipMain.bind(this);\r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n    this.createGroup = this.createGroup.bind(this);\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.createGroup = this.createGroup.bind(this);\r\n    this.getFriendFood = this.getFriendFood.bind(this);\r\n  }\r\n\r\n  onSetSidebarOpen(open) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n  showModal = (id) => {\r\n    this.setState({ show: true, idAdd: id });\r\n    console.log(this.state.idAdd);\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  showModal2 = (id) => {\r\n    this.setState({ show2: true, idGet: id });\r\n  };\r\n\r\n  hideModal2 = () => {\r\n    this.setState({ show2: false });\r\n  };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log(prevState.users);\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"begin\");\r\n    try {\r\n      var userr = await get(userRoute, this.props.location.state.user);\r\n      this.setState({\r\n        user: userr,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    try {\r\n      var groups = await getUserGroups(groupRoute, this.state.user.UserId);\r\n      this.setState({\r\n        groups: groups,\r\n      });\r\n      console.log(groups);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    try {\r\n      var allUsers = await getAll(userRoute);\r\n\r\n      var foods = await getAllFood(foodRoute, this.props.location.state.user);\r\n\r\n      var friendsIds = await getFriendsIds(link, this.state.user.UserId);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n\r\n    var array = [this.state.user];\r\n\r\n    try {\r\n      friendsIds.map(async (item) => {\r\n        var hold = await get(userRoute, item.UserFriendId);\r\n        allUsers = allUsers.filter((el) => el.UserId != item.UserFriendId);\r\n        array.push(hold);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    array = array.filter((el) => el.UserId != this.state.user.UserId);\r\n    allUsers = allUsers.filter((el) => el.UserId != this.state.user.UserId);\r\n\r\n    for (let i = 0; i < array.length; i++) console.log(array[i]);\r\n\r\n    let friends = await getAll(friendsRoute);\r\n\r\n    var filtered = [];\r\n    let ok = true;\r\n\r\n    for (let arr of allUsers) {\r\n      ok = true;\r\n\r\n      for (let filter of array) {\r\n        if (arr.UserId === filter.UserId) {\r\n          ok = false;\r\n        }\r\n      }\r\n\r\n      if (ok == true) {\r\n        filtered.push(arr);\r\n      }\r\n    }\r\n    this.setState({\r\n      users: filtered,\r\n      foods: foods,\r\n      friends: array,\r\n    });\r\n\r\n    var today = new Date();\r\n\r\n    this.setState({\r\n      dd: parseFloat(String(today.getDate()).padStart(2, \"0\")),\r\n      mm: parseFloat(String(today.getMonth() + 1).padStart(2, \"0\")),\r\n      yyyy: parseFloat(today.getFullYear()),\r\n    });\r\n\r\n    this.state.foods.map((item, index) => {\r\n      const date = new Date(item.FoodExpirationDate);\r\n      var month = date.getUTCMonth() + 1;\r\n      var day = date.getUTCDate();\r\n      var year = date.getUTCFullYear();\r\n      var plus = -1;\r\n      //aceeasi luna\r\n      if (\r\n        year === this.state.yyyy &&\r\n        month === this.state.mm &&\r\n        day - this.state.dd <= 7 &&\r\n        day - this.state.dd >= 1\r\n      ) {\r\n        plus = 0;\r\n        //luna impara\r\n      } else if (\r\n        this.state.mm % 2 === 1 &&\r\n        year === this.state.yyyy &&\r\n        month === this.state.mm + 1 &&\r\n        day + 31 - this.state.dd <= 7 &&\r\n        day + 31 - this.state.dd >= 1\r\n      ) {\r\n        plus = 31;\r\n      }\r\n      //luna para, dar nu februarie\r\n      else if (\r\n        this.state.mm % 2 === 0 &&\r\n        this.state.mm !== 2 &&\r\n        year === this.state.yyyy &&\r\n        month === this.state.mm + 1 &&\r\n        day + 30 - this.state.dd <= 7 &&\r\n        day + 30 - this.state.dd >= 1\r\n      ) {\r\n        plus = 30;\r\n      }\r\n      //februarie nebisect\r\n      else if (\r\n        this.state.mm === 2 &&\r\n        year % 4 === 1 &&\r\n        year === this.state.yyyy &&\r\n        month === this.state.mm + 1 &&\r\n        day + 28 - this.state.dd <= 7 &&\r\n        day + 28 - this.state.dd >= 1\r\n      ) {\r\n        plus = 28;\r\n      }\r\n      //februarie bisect\r\n      else if (\r\n        this.state.mm === 2 &&\r\n        year % 4 === 0 &&\r\n        year === this.state.yyyy &&\r\n        month === this.state.mm + 1 &&\r\n        day + 29 - this.state.dd <= 7 &&\r\n        day + 29 - this.state.dd >= 1\r\n      ) {\r\n        plus = 29;\r\n      }\r\n      if (plus !== -1) {\r\n        toast(\"Iti expira \" + item.FoodName);\r\n      }\r\n    });\r\n  }\r\n\r\n  regFood = () => {\r\n    this.props.history.push({\r\n      pathname: \"/registerFood\",\r\n      state: { userId: this.state.user.UserId },\r\n    });\r\n  };\r\n\r\n  open = () => {};\r\n\r\n  close = () => {};\r\n\r\n  async deleteGroupUser(id) {\r\n    try {\r\n      await deleteSmth(groupUsersRoute, id);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  deleteFriendshipMain = async (url, id1, id2) => {\r\n    await deleteFriendship(url, id1, id2);\r\n    const newFriends = this.state.friends.filter((el) => el.UserId != id2);\r\n    await get(userRoute, id2)\r\n      .then((newUser) => {\r\n        const allUsers = this.state.users;\r\n        allUsers.push(newUser);\r\n        console.log(this.state.users);\r\n        this.setState({\r\n          users: allUsers,\r\n          friends: newFriends,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  delete = (id, friendNew) => {\r\n    const newUsers = this.state.users.filter((el) => el.UserId != id);\r\n    const friendsNew = this.state.friends;\r\n    friendsNew.push(friendNew);\r\n\r\n    this.setState({\r\n      friends: friendsNew,\r\n      users: newUsers,\r\n    });\r\n  };\r\n\r\n  async friendAdd(item) {\r\n    var friendNew = this.state.newFriend;\r\n    friendNew.UserId = this.state.user.UserId;\r\n    friendNew.UserFriendId = item.UserId;\r\n    await post(friendsRoute, friendNew);\r\n    const newFriend = await get(userRoute, friendNew.UserFriendId);\r\n    this.delete(item.UserId, newFriend);\r\n  }\r\n\r\n  async createGroup() {\r\n    const group = {\r\n      CreatorId: this.state.user.UserId,\r\n      GroupDescription: this.state.GroupDescription,\r\n      GroupsUsers: [],\r\n    };\r\n    await post(groupRoute, group)\r\n      .then((e1) => {\r\n        let newGroups = this.state.groups;\r\n        newGroups.push(e1);\r\n        this.setState({\r\n          groups: newGroups,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  async getFriendFood(id) {\r\n    try {\r\n      let foodFriend = await getAllFood(foodRoute, id);\r\n\r\n      this.setState({\r\n        friendFoods: foodFriend,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async takeFood(id) {\r\n    try {\r\n      let food = await get(foodRoute, id);\r\n      food.UserId = this.state.user.UserId;\r\n      food.Available = \"False\";\r\n      let f = await deleteSmth(foodRoute, id);\r\n\r\n      let newFoods = this.state.foods;\r\n      await post(foodRoute, food);\r\n      newFoods.push(food);\r\n      var newFriendsFood = this.state.friendFoods.filter(\r\n        (el) => el.FoodId != id\r\n      );\r\n      this.setState({\r\n        foods: newFoods,\r\n        friendFoods: newFriendsFood,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  returnFoodName(foodName, av) {\r\n    if (av === true) return <p>{foodName}</p>;\r\n    else return null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"all\">\r\n        <div className=\"Friendship\">\r\n          <div className=\"UserCollaps\">\r\n            {\" \"}\r\n            <Collapsible\r\n              easing=\"ease\"\r\n              trigger=\"Users\"\r\n              contentInnerClassName=\"UserCollapsInner\"\r\n              className=\"UserCollapsTrigger\"\r\n              openedClassName=\"UserCollapsTrigger\"\r\n            >\r\n              <ul>\r\n                {this.state.users.map((item, index) => {\r\n                  let obj = false;\r\n                  this.state.friends.find((el) => {\r\n                    if (el.UserId == item.UserId) obj = true;\r\n                    return null;\r\n                  });\r\n                  if (obj != true)\r\n                    return (\r\n                      <li className=\"liAddFriend\" key={index}>\r\n                        <button\r\n                          className=\"buttonAddFriend\"\r\n                          onClick={() => {\r\n                            this.friendAdd(item);\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faUserPlus} />\r\n                        </button>{\" \"}\r\n                        {item.UserName + \" \" + item.UserSurname}{\" \"}\r\n                      </li>\r\n                    );\r\n                  else return 0;\r\n                })}\r\n              </ul>\r\n            </Collapsible>\r\n          </div>\r\n\r\n          <div className=\"FriendsCollaps\">\r\n            {\" \"}\r\n            <Collapsible\r\n              easing=\"ease\"\r\n              trigger=\"Friends\"\r\n              contentInnerClassName=\"FriendsCollapsInner\"\r\n              className=\"FriendsCollapsTrigger\"\r\n              openedClassName=\"FriendsCollapsTrigger\"\r\n            >\r\n              <ul>\r\n                {this.state.friends.map((item) => {\r\n                  return (\r\n                    <li key={item.UserId}>\r\n                      {item.UserName + \" \" + item.UserSurname}\r\n                      {\"\\n\"}\r\n                      <br />\r\n                      <button\r\n                        className=\"buttonAddFriend\"\r\n                        onClick={() => {\r\n                          this.showModal(item.UserId);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faUsers} />\r\n                      </button>{\" \"}\r\n                      <button\r\n                        className=\"buttonAddFriend\"\r\n                        onClick={() => {\r\n                          this.deleteFriendshipMain(\r\n                            link,\r\n                            this.state.user.UserId,\r\n                            item.UserId\r\n                          );\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                      </button>{\" \"}\r\n                      <button\r\n                        className=\"buttonAddFriend\"\r\n                        onClick={() => {\r\n                          this.getFriendFood(item.UserId);\r\n                          this.showModal2(item.UserId);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faUtensils} />\r\n                      </button>{\" \"}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </Collapsible>\r\n          </div>\r\n          <div className=\"groupInput\">\r\n            <div>\r\n              <label style={{ color: \"white\" }}>Add a new group</label>\r\n            </div>\r\n            <div className=\"addGroup\">\r\n              <div>\r\n                <input\r\n                  id=\"inputGroup\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      GroupDescription: e.target.value,\r\n                    });\r\n                  }}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={async () => {\r\n                    this.createGroup();\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <FontAwesomeIcon icon={faPlusCircle} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"arctic\">\r\n          <div className=\"door\">\r\n            <Collapsible\r\n              trigger={\r\n                <i style={{ fontSize: \"20px\" }}>\r\n                  Expira in mai putin de o luna\r\n                </i>\r\n              }\r\n              triggerTagName=\"ul\"\r\n            >\r\n              <ul id=\"almost\">\r\n                {this.state.foods.map((item, index) => {\r\n                  const date = new Date(item.FoodExpirationDate);\r\n                  var month = parseFloat(date.getUTCMonth()) + 1;\r\n                  var day = parseFloat(date.getUTCDate());\r\n                  var year = parseFloat(date.getUTCFullYear());\r\n                  var plus = -1;\r\n                  //aceeasi luna\r\n                  if (\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm &&\r\n                    day - this.state.dd <= 31 &&\r\n                    day - this.state.dd > 7\r\n                  ) {\r\n                    plus = 0;\r\n                    //luna impara\r\n                  } else if (\r\n                    this.state.mm % 2 === 1 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 31 - this.state.dd <= 31 &&\r\n                    day + 31 - this.state.dd > 7\r\n                  ) {\r\n                    plus = 31;\r\n                  }\r\n                  //luna para, dar nu februarie\r\n                  else if (\r\n                    this.state.mm % 2 === 0 &&\r\n                    this.state.mm !== 2 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 30 - this.state.dd <= 31 &&\r\n                    day + 30 - this.state.dd > 7\r\n                  ) {\r\n                    plus = 31;\r\n                  }\r\n                  //februarie nebisect\r\n                  else if (\r\n                    this.state.mm === 2 &&\r\n                    year % 4 === 1 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 28 - this.state.dd <= 31 &&\r\n                    day + 28 - this.state.dd > 7\r\n                  ) {\r\n                    plus = 28;\r\n                  }\r\n                  //februarie bisect\r\n                  else if (\r\n                    this.state.mm === 2 &&\r\n                    year % 4 === 0 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 29 - this.state.dd <= 31 &&\r\n                    day + 29 - this.state.dd > 7\r\n                  ) {\r\n                    plus = 29;\r\n                  }\r\n                  if (plus !== -1)\r\n                    return (\r\n                      <li style={{ marginRight: \"10px \" }} key={index}>\r\n                        {\" \"}\r\n                        {item.FoodName +\r\n                          \" - expira in \" +\r\n                          (day + plus - this.state.dd) +\r\n                          \" zile\"}{\" \"}\r\n                      </li>\r\n                    );\r\n                  else return null;\r\n                })}\r\n              </ul>\r\n            </Collapsible>\r\n            <Collapsible\r\n              trigger={<i style={{ fontSize: \"20px\" }}>Expirate</i>}\r\n              triggerTagName=\"ul\"\r\n            >\r\n              <ul id=\"exp\">\r\n                {this.state.foods.map((item, index) => {\r\n                  const date = new Date(item.FoodExpirationDate);\r\n                  var month = date.getUTCMonth() + 1;\r\n                  var day = date.getUTCDate();\r\n                  var year = date.getUTCFullYear();\r\n\r\n                  if (\r\n                    (year === this.state.yyyy &&\r\n                      this.state.mm === month &&\r\n                      day <= this.state.dd) ||\r\n                    year < this.state.yyyy ||\r\n                    (year === this.state.yyyy && month < this.state.mm)\r\n                  ) {\r\n                    return (\r\n                      <li key={index}> {item.FoodName + \" a expirat deja\"} </li>\r\n                    );\r\n                  } else return null;\r\n                })}\r\n              </ul>\r\n            </Collapsible>\r\n            <Collapsible\r\n              trigger={\r\n                <i style={{ fontSize: \"20px\" }}>Mai putin de o saptamana</i>\r\n              }\r\n              triggerTagName=\"ul\"\r\n            >\r\n              <ul id=\"little\">\r\n                {this.state.foods.map((item, index) => {\r\n                  const date = new Date(item.FoodExpirationDate);\r\n                  var month = date.getUTCMonth() + 1;\r\n                  var day = date.getUTCDate();\r\n                  var year = date.getUTCFullYear();\r\n                  var plus = -1;\r\n                  //aceeasi luna\r\n                  if (\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm &&\r\n                    day - this.state.dd <= 7 &&\r\n                    day - this.state.dd >= 1\r\n                  ) {\r\n                    plus = 0;\r\n                    //luna impara\r\n                  } else if (\r\n                    this.state.mm % 2 === 1 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 31 - this.state.dd <= 7 &&\r\n                    day + 31 - this.state.dd >= 1\r\n                  ) {\r\n                    plus = 31;\r\n                  }\r\n                  //luna para, dar nu februarie\r\n                  else if (\r\n                    this.state.mm % 2 === 0 &&\r\n                    this.state.mm !== 2 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 30 - this.state.dd <= 7 &&\r\n                    day + 30 - this.state.dd >= 1\r\n                  ) {\r\n                    plus = 30;\r\n                  }\r\n                  //februarie nebisect\r\n                  else if (\r\n                    this.state.mm === 2 &&\r\n                    year % 4 === 1 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 28 - this.state.dd <= 7 &&\r\n                    day + 28 - this.state.dd >= 1\r\n                  ) {\r\n                    plus = 28;\r\n                  }\r\n                  //februarie bisect\r\n                  else if (\r\n                    this.state.mm === 2 &&\r\n                    year % 4 === 0 &&\r\n                    year === this.state.yyyy &&\r\n                    month === this.state.mm + 1 &&\r\n                    day + 29 - this.state.dd <= 7 &&\r\n                    day + 29 - this.state.dd >= 1\r\n                  ) {\r\n                    plus = 29;\r\n                  }\r\n                  if (plus !== -1) {\r\n                    //toast(\"Iti expira \"+item.FoodName)\r\n                    return (\r\n                      <li style={{ marginRight: \"10px \" }} key={index}>\r\n                        {\" \"}\r\n                        {item.FoodName +\r\n                          \" - expira in \" +\r\n                          (day + plus - this.state.dd) +\r\n                          \" zile\"}{\" \"}\r\n                      </li>\r\n                    );\r\n                  } else return null;\r\n                })}\r\n              </ul>\r\n            </Collapsible>\r\n          </div>\r\n          <div className=\"fridge\">\r\n            {this.state.foodTypes.map((item) => {\r\n              return (\r\n                <Collapsible\r\n                  trigger={<i style={{ fontSize: \"20px\" }}>{item}</i>}\r\n                  triggerTagName=\"ul\"\r\n                >\r\n                  <ul>\r\n                    {this.state.foods.map((item2) => {\r\n                      if (item2.FoodType == item) {\r\n                        var styleLi = {\r\n                          color: \"\",\r\n                          cursor: \"grab\",\r\n                        };\r\n                        if (item2.Available == \"True\") {\r\n                          styleLi.color = \"green\";\r\n                        } else {\r\n                          styleLi.color = \"red\";\r\n                        }\r\n\r\n                        return (\r\n                          <li\r\n                            style={styleLi}\r\n                            onDoubleClick={async (ev) => {\r\n                              if (item2.Available == \"True\") {\r\n                                item2.Available = \"False\";\r\n                                ev.target.style.color = \"red\";\r\n                              } else {\r\n                                item2.Available = \"True\";\r\n                                ev.target.style.color = \"green\";\r\n                              }\r\n                              try {\r\n                                await update(foodRoute, item2, item2.FoodId);\r\n                              } catch (er) {\r\n                                alert(er);\r\n                              }\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            <button\r\n                              className=\"buttonAddFriend\"\r\n                              onClick={async () => {\r\n                                await deleteSmth(foodRoute, item2.FoodId);\r\n                                let newFoods = this.state.foods.filter(\r\n                                  (el) => el.FoodId != item2.FoodId\r\n                                );\r\n                                this.setState({\r\n                                  foods: newFoods,\r\n                                });\r\n                              }}\r\n                              style={{ marginRight: \"10px\" }}\r\n                            >\r\n                              <FontAwesomeIcon icon={faTrash} />\r\n                            </button>\r\n                            {item2.FoodName}\r\n                          </li>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </ul>\r\n                </Collapsible>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <button id=\"addFood\" onClick={this.regFood}>\r\n          🍕 Add Your Food 🍕\r\n        </button>\r\n\r\n        <div className=\"Groups\">\r\n          <h3 style={{ textAlign: \"center\" }}>\r\n            <i>Your Groups</i>\r\n          </h3>\r\n          {this.state.groups.map((item) => {\r\n            return (\r\n              <div class=\"groupItems\">\r\n                <Collapsible\r\n                  trigger={item.GroupDescription}\r\n                  triggerTagName=\"ul\"\r\n                >\r\n                  {item.GroupsUsers.map((item2) => {\r\n                    let usName = \"\";\r\n                    let usSurName = \"\";\r\n                    let us = this.state.friends.find(\r\n                      (el) => el.UserId == item2.UserId\r\n                    );\r\n                    for (var i in us) {\r\n                      if (i == \"UserName\") usName = us[i];\r\n                      else if (i == \"UserSurname\") {\r\n                        usSurName = us[i];\r\n                      }\r\n                    }\r\n                    if (usName !== \"\")\r\n                      return (\r\n                        <p>\r\n                          <button\r\n                            style={{ marginRight: \"10px \", marginLeft: \"10px\" }}\r\n                            onClick={() => {\r\n                              this.deleteGroupUser(item2.GroupsUsersId);\r\n                            }}\r\n                          >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                          </button>\r\n                          {usName + \" \" + usSurName}\r\n                        </p>\r\n                      );\r\n                    else return null;\r\n                  })}\r\n                </Collapsible>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <button\r\n          id=\"groups\"\r\n          onClick={(item) => {\r\n            let side = document.querySelector(\".Groups\");\r\n            if (this.state.sidebarOpen === \"none\") {\r\n              side.style.display = \"inline\";\r\n              item.target.style.animation = \"buttonopen 1s forwards\";\r\n              side.style.animation = \"sidebaropen 1s forwards\";\r\n              this.setState({\r\n                sidebarOpen: \"inline\",\r\n              });\r\n            } else {\r\n              side.style.animation = \"sidebarclose 1s forwards\";\r\n              item.target.style.animation = \"buttonclose 1s forwards\";\r\n\r\n              this.setState({\r\n                sidebarOpen: \"none\",\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          👥\r\n        </button>\r\n        <ToastContainer />\r\n        <Modal show={this.state.show} handleClose={this.hideModal}>\r\n          {this.state.groups.map((item) => {\r\n            return (\r\n              <div className=\"modalGroups\">\r\n                <div>\r\n                  <button\r\n                    onClick={async () => {\r\n                      const groupUser = {\r\n                        GroupId: item.GroupId,\r\n                        UserId: this.state.idAdd,\r\n                      };\r\n                      try {\r\n                        await post(groupUsersRoute, groupUser);\r\n                        var groups = await getUserGroups(\r\n                          groupRoute,\r\n                          this.state.user.UserId\r\n                        );\r\n                        this.setState({\r\n                          groups: groups,\r\n                        });\r\n                      } catch (e) {\r\n                        console.log(e);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <FontAwesomeIcon icon={faPlusCircle} />\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <p>{item.GroupDescription}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Modal>\r\n        <Modal show={this.state.show2} handleClose={this.hideModal2}>\r\n          {this.state.friendFoods.map((item) => {\r\n            if (item.Available == \"True\")\r\n              return (\r\n                <div className=\"modalGroups\">\r\n                  <div>\r\n                    <button\r\n                      onClick={() => {\r\n                        this.takeFood(item.FoodId);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <FontAwesomeIcon icon={faPlusCircle} />\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <p>{item.FoodName}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n          })}\r\n        </Modal>\r\n        <div className=\"sharedButton\">\r\n          <div>\r\n            <FacebookShareButton\r\n              url=\"https://www.localhost:3000\"\r\n              hashtag=\"#NoFoodWaste\"\r\n              appId=\"Hellow\"\r\n              quote=\"Share your food with us, don't waste it anymore!\"\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              <FacebookIcon\r\n                size={\"4rem\"} // You can use rem value instead of numbers\r\n                round\r\n              >\r\n                Buna ziua\r\n              </FacebookIcon>\r\n            </FacebookShareButton>\r\n          </div>\r\n          <WhatsappShareButton\r\n            title=\"Hey, come and help us save the planet, don't waste anymore food!!🍕🍳🥓🧆🍦🥘🍪🍰🥣🍤🦪🥮☕🍾🍓🍉🍍🥕🌶 !!\"\r\n            url=\"http://www.google.ro\"\r\n          >\r\n            <WhatsappIcon\r\n              size={\"4rem\"} // You can use rem value instead of numbers\r\n              round\r\n            >\r\n              Buna ziua\r\n            </WhatsappIcon>\r\n          </WhatsappShareButton>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\Calls.js",[],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\ApiRoutes.js",[],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\RegisterFood.js",["87"],"D:\\Facultate\\an3\\Sem 1\\TW\\Food Waste mySql\\Food Waste\\front\\foodsavers\\src\\components\\Modal.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":52,"column":17,"nodeType":"100","endLine":52,"endColumn":117},{"ruleId":"101","severity":1,"message":"102","line":156,"column":54,"nodeType":"103","messageId":"104","endLine":156,"endColumn":56},{"ruleId":"101","severity":1,"message":"102","line":163,"column":44,"nodeType":"103","messageId":"104","endLine":163,"endColumn":46},{"ruleId":"101","severity":1,"message":"102","line":164,"column":50,"nodeType":"103","messageId":"104","endLine":164,"endColumn":52},{"ruleId":"94","severity":1,"message":"105","line":168,"column":9,"nodeType":"96","messageId":"97","endLine":168,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":182,"column":14,"nodeType":"103","messageId":"104","endLine":182,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":200,"column":40,"nodeType":"109","messageId":"110","endLine":200,"endColumn":42},{"ruleId":"101","severity":1,"message":"102","line":284,"column":68,"nodeType":"103","messageId":"104","endLine":284,"endColumn":70},{"ruleId":"101","severity":1,"message":"102","line":301,"column":64,"nodeType":"103","messageId":"104","endLine":301,"endColumn":66},{"ruleId":"94","severity":1,"message":"111","line":356,"column":11,"nodeType":"96","messageId":"97","endLine":356,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":362,"column":27,"nodeType":"103","messageId":"104","endLine":362,"endColumn":29},{"ruleId":"101","severity":1,"message":"106","line":395,"column":35,"nodeType":"103","messageId":"104","endLine":395,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":398,"column":27,"nodeType":"103","messageId":"104","endLine":398,"endColumn":29},{"ruleId":"107","severity":1,"message":"112","line":694,"column":51,"nodeType":"109","messageId":"113","endLine":694,"endColumn":53},{"ruleId":"101","severity":1,"message":"106","line":695,"column":42,"nodeType":"103","messageId":"104","endLine":695,"endColumn":44},{"ruleId":"101","severity":1,"message":"106","line":700,"column":45,"nodeType":"103","messageId":"104","endLine":700,"endColumn":47},{"ruleId":"101","severity":1,"message":"106","line":710,"column":51,"nodeType":"103","messageId":"104","endLine":710,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":730,"column":53,"nodeType":"103","messageId":"104","endLine":730,"endColumn":55},{"ruleId":"101","severity":1,"message":"106","line":770,"column":41,"nodeType":"103","messageId":"104","endLine":770,"endColumn":43},{"ruleId":"101","severity":1,"message":"106","line":773,"column":29,"nodeType":"103","messageId":"104","endLine":773,"endColumn":31},{"ruleId":"101","severity":1,"message":"106","line":774,"column":34,"nodeType":"103","messageId":"104","endLine":774,"endColumn":36},{"ruleId":"107","severity":1,"message":"112","line":861,"column":46,"nodeType":"109","messageId":"113","endLine":861,"endColumn":48},{"ruleId":"101","severity":1,"message":"106","line":862,"column":32,"nodeType":"103","messageId":"104","endLine":862,"endColumn":34},{"ruleId":"94","severity":1,"message":"114","line":50,"column":11,"nodeType":"96","messageId":"97","endLine":50,"endColumn":14},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'friends' is assigned a value but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'f' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]